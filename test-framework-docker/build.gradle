import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage
import com.bmuschko.gradle.docker.tasks.image.DockerTagImage

subprojects {

    dependencies {
        compile "org.apache.mesos:mesos:${mesosVer}"
        compile 'com.google.code.gson:gson:2.3'         // marshalling between the scheduler and executor

        testCompile 'junit:junit:4.12'
        testCompile "org.mockito:mockito-all:1.9.5"
    }

    afterEvaluate { project ->
        if (new File(project.projectDir, 'Dockerfile').exists()) {
            project.build.dependsOn buildDockerImage

            task buildDockerImage(type: DockerBuildImage, dependsOn: [taskCopyFilesForDocker], description: 'build Docker image') {
                setInputDir(file(project.projectDir))
                setTag(project.imageName)
            }

            for (tag in ['latest', 'version']) {
                String uppercasedTag = tag.capitalize()

                task "tagDockerImageWith$uppercasedTag"(type: DockerTagImage, description: 'tag Docker image') {
                    setImageId(project.imageName)
                    setTag('version' == tag ? project.version : tag)
                    setRepository(project.imageName)
                    setForce(true)
                }

                task "publishDockerImageWith$uppercasedTag"(type: DockerPushImage, dependsOn: ["tagDockerImageWith$uppercasedTag"],
                        description: 'publish Docker image') {
                    setImageName(project.imageName)
                    setTag('version' == tag ? project.version : tag)
                }
            }
        }
    }
}
